apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-service
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/websocket-services: "socket-srv"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "7200"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "7200"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "7200"
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
spec:
  rules:
  - host: www.leetcode-dev.store
    http:
      paths:
      - path: /api/v1/users/?(.*)
        pathType: Prefix
        backend:
          service:
            name: auth-srv
            port:
              number: 3000
      - path: /api/v1/problems/?(.*)
        pathType: Prefix
        backend:
          service:
            name: main-srv
            port:
              number: 3000
      - path: /api/v1/author/problems/?(.*)
        pathType: Prefix
        backend:
          service:
            name: author-srv
            port:
              number: 3000
      - path: /api/v1/comments/?(.*)
        pathType: Prefix
        backend:
          service:
            name: comments-srv
            port:
              number: 3000
      - path: /api/v1/payments/?(.*)
        pathType: Prefix
        backend:
          service:
            name: payments-srv
            port:
              number: 3000
      - path: /api/v1/likes/?(.*)
        pathType: Prefix
        backend:
          service:
            name: likes-srv
            port:
              number: 3000
      - path: /ws
        pathType: Prefix
        backend:
          service:
            name: socket-srv
            port:
              number: 3000
      - path: /?(.*)
        pathType: Prefix
        backend:
          service:
            name: client-srv
            port:
              number: 5173

# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: ingress-service
#   annotations:
#     kubernetes.io/ingress.class: nginx
#     nginx.ingress.kubernetes.io/use-regex: "true"
#     nginx.ingress.kubernetes.io/websocket-services: "socket-srv"
# spec:
#   rules:
#   - host: www.leetcode-dev.store
#     http:
#       paths:
#       - path: /api/v1/users(/|$)(.*)
#         pathType: ImplementationSpecific
#         backend:
#           service:
#             name: auth-srv
#             port:
#               number: 3000
#       - path: /api/v1/problems(/|$)(.*)
#         pathType: ImplementationSpecific
#         backend:
#           service:
#             name: main-srv
#             port:
#               number: 3000
#       - path: /api/v1/author/problems(/|$)(.*)
#         pathType: ImplementationSpecific
#         backend:
#           service:
#             name: author-srv
#             port:
#               number: 3000
#       - path: /api/v1/comments(/|$)(.*)
#         pathType: ImplementationSpecific
#         backend:
#           service:
#             name: comments-srv
#             port:
#               number: 3000
#       - path: /api/v1/payments(/|$)(.*)
#         pathType: ImplementationSpecific
#         backend:
#           service:
#             name: payments-srv
#             port:
#               number: 3000
#       - path: /ws
#         pathType: Prefix
#         backend:
#           service:
#             name: socket-srv
#             port:
#               number: 3000
#       - path: /(/|$)(.*)
#         pathType: ImplementationSpecific
#         backend:
#           service:
#             name: client-srv
#             port:
#               number: 5173
---
apiVersion: v1
kind: Service
metadata:
  name: ingress-nginx-controller
  namespace: ingress-nginx
  # namespace: default
  annotations:
    service.beta.kubernetes.io/do-loadbalancer-enable-proxy-protocol: 'false'
    service.beta.kubernetes.io/do-loadbalancer-healthcheck-port: "80"
    service.beta.kubernetes.io/do-loadbalancer-healthcheck-protocol: "http"
    service.beta.kubernetes.io/do-loadbalancer-healthcheck-path: "/health"
    service.beta.kubernetes.io/do-loadbalancer-healthcheck-check-interval-seconds: "3"
    service.beta.kubernetes.io/do-loadbalancer-healthcheck-response-timeout-seconds: "5"
    service.beta.kubernetes.io/do-loadbalancer-healthcheck-unhealthy-threshold: "3"
    service.beta.kubernetes.io/do-loadbalancer-healthcheck-healthy-threshold: "5"
  labels:
    helm.sh/chart: ingress-nginx-2.0.3
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/version: 0.32.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
spec:
  type: LoadBalancer
  externalTrafficPolicy: Cluster
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  - name: https
    port: 443
    protocol: TCP
    targetPort: https
  selector:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/component: controller

# ---
# apiVersion: v1
# kind: Service
# metadata:
#   annotations:
#     service.beta.kubernetes.io/do-loadbalancer-enable-proxy-protocol: 'false'
#     service.beta.kubernetes.io/do-loadbalancer-hostname: 'www.leetcode-dev.store'
#   labels:
#     helm.sh/chart: ingress-nginx-2.0.3
#     app.kubernetes.io/name: ingress-nginx
#     app.kubernetes.io/instance: ingress-nginx
#     app.kubernetes.io/version: 0.32.0
#     app.kubernetes.io/managed-by: Helm
#     app.kubernetes.io/component: controller
#   name: ingress-nginx-controller
#   namespace: ingress-nginx
# spec:
#   type: LoadBalancer
#   externalTrafficPolicy: Local
#   ports:
#   - name: http
#     port: 80
#     protocol: TCP
#     targetPort: http
#   - name: https
#     port: 443
#     protocol: TCP
#     targetPort: https
#   selector:
#     app.kubernetes.io/name: ingress-nginx
#     app.kubernetes.io/instance: ingress-nginx
#     app.kubernetes.io/component: controller
